; Listing generated by Microsoft (R) Optimizing Compiler Version 19.21.27702.2 

	TITLE	C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?cubeVerts@@3PAMA				; cubeVerts
_DATA	SEGMENT
?cubeVerts@@3PAMA DD 03f800000r			; 1	; cubeVerts
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
_DATA	ENDS
CONST	SEGMENT
?projectionmatrix@@3QBMB DD 03f800000r		; 1	; projectionmatrix
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03fa00000r			; 1.25
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800054r			; -1.00001
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bc23d740r			; -0.0100001
	DD	000000000r			; 0
?cubeIndices@@3QBHB DD 00H				; cubeIndices
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0cH
	DD	0dH
	DD	0eH
	DD	0fH
	DD	010H
	DD	011H
	DD	012H
	DD	013H
	DD	014H
	DD	015H
	DD	016H
	DD	017H
CONST	ENDS
PUBLIC	?intro_init@@YGHXZ				; intro_init
PUBLIC	?intro_do@@YGXJ@Z				; intro_do
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3a83126f
PUBLIC	__real@3e800000
PUBLIC	__real@3eb33333
PUBLIC	__real@3ecccccd
PUBLIC	__real@3f1a0000
PUBLIC	__real@3f810000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40400000
EXTRN	__imp__glClear@4:PROC
EXTRN	__imp__glClearColor@16:PROC
EXTRN	__imp__glDisable@4:PROC
EXTRN	__imp__glDisableClientState@4:PROC
EXTRN	__imp__glDrawElements@16:PROC
EXTRN	__imp__glEnable@4:PROC
EXTRN	__imp__glEnableClientState@4:PROC
EXTRN	__imp__glLoadIdentity@0:PROC
EXTRN	__imp__glLoadMatrixf@4:PROC
EXTRN	__imp__glMatrixMode@4:PROC
EXTRN	__imp__glNormalPointer@12:PROC
EXTRN	__imp__glVertexPointer@16:PROC
EXTRN	_gluLookAt@72:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f810000
CONST	SEGMENT
__real@3f810000 DD 03f810000r			; 1.00781
CONST	ENDS
;	COMDAT __real@3f1a0000
CONST	SEGMENT
__real@3f1a0000 DD 03f1a0000r			; 0.601563
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Ogspy
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp
;	COMDAT ?intro_do@@YGXJ@Z
_TEXT	SEGMENT
_ftime$1$ = 8						; size = 4
_itime$ = 8						; size = 4
?intro_do@@YGXJ@Z PROC					; intro_do, COMDAT

; 74   : {

	push	ebp
	mov	ebp, esp

; 75   :     const float ftime = 0.001f*(float)itime;

	fild	DWORD PTR _itime$[ebp]
	push	ebx
	push	esi

; 81   :     float tar[3] = { 0.0f, 0.0f, 0.0f };
; 82   : 
; 83   : 	/*
; 84   : 	for (int i = 0; i < 44; i++) {
; 85   : 		cubeVerts[i] = pos[0] * cubeVerts[i];
; 86   : 	}
; 87   : 	*/
; 88   : 
; 89   :     // render
; 90   : 	glEnable( GL_DEPTH_TEST );

	mov	esi, DWORD PTR __imp__glEnable@4
	push	edi
	fmul	DWORD PTR __real@3a83126f
	push	2929					; 00000b71H
	fstp	DWORD PTR _ftime$1$[ebp]
	call	esi

; 91   :     glEnable( GL_CULL_FACE );

	push	2884					; 00000b44H
	call	esi

; 92   : 	glDisable( GL_BLEND );

	push	3042					; 00000be2H
	call	DWORD PTR __imp__glDisable@4

; 93   :     glEnable( GL_LIGHTING );

	push	2896					; 00000b50H
	call	esi

; 94   :     glEnable( GL_LIGHT0 );

	push	16384					; 00004000H
	call	esi

; 95   :     glEnable( GL_NORMALIZE );

	push	2977					; 00000ba1H
	call	esi

; 96   : 
; 97   :     glClearColor( 0.25f, 0.35f, 0.4f, 0.0f );

	fldz
	sub	esp, 16					; 00000010H
	fstp	DWORD PTR [esp+12]
	fld	DWORD PTR __real@3ecccccd
	fstp	DWORD PTR [esp+8]
	fld	DWORD PTR __real@3eb33333
	fstp	DWORD PTR [esp+4]
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR [esp]
	call	DWORD PTR __imp__glClearColor@16

; 98   : 	glClear( GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT );

	push	16640					; 00004100H
	call	DWORD PTR __imp__glClear@4

; 99   : 
; 100  :     glMatrixMode( GL_PROJECTION );

	mov	esi, DWORD PTR __imp__glMatrixMode@4
	push	5889					; 00001701H
	call	esi

; 101  : 	glLoadMatrixf( projectionmatrix );

	push	OFFSET ?projectionmatrix@@3QBMB
	call	DWORD PTR __imp__glLoadMatrixf@4

; 102  :     glMatrixMode( GL_MODELVIEW );

	push	5888					; 00001700H
	call	esi

; 103  :     glLoadIdentity();

	call	DWORD PTR __imp__glLoadIdentity@0

; 104  :     gluLookAt( pos[0], pos[1], pos[2], tar[0], tar[1], tar[2], 0.0f, 1.0f, 0.0f );

	fldz
	sub	esp, 72					; 00000048H
	fst	QWORD PTR [esp+64]
	fld1
	fstp	QWORD PTR [esp+56]
	fst	QWORD PTR [esp+48]
	fst	QWORD PTR [esp+40]
	fst	QWORD PTR [esp+32]
	fstp	QWORD PTR [esp+24]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	fld	DWORD PTR _ftime$1$[ebp]
	fld	ST(0)
	fsin
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp

; 80   :                      3.0f*sinf(ftime*p1d00) };

	fld	DWORD PTR __real@40400000
	fmul	ST(1), ST(0)

; 104  :     gluLookAt( pos[0], pos[1], pos[2], tar[0], tar[1], tar[2], 0.0f, 1.0f, 0.0f );

	fxch	ST(1)
	fstp	QWORD PTR [esp+16]
	fld	ST(1)
	fmul	DWORD PTR __real@3f1a0000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	fcos
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp

; 79   :                      3.0f*cosf(ftime*p0d60), 

	fmul	ST(0), ST(1)

; 104  :     gluLookAt( pos[0], pos[1], pos[2], tar[0], tar[1], tar[2], 0.0f, 1.0f, 0.0f );

	fstp	QWORD PTR [esp+8]
	fxch	ST(1)
	fmul	DWORD PTR __real@3f810000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	fcos
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp

; 78   :     float pos[3] = { 3.0f*cosf(ftime*p1d01),  // do not make 1.0, otherwise sincos will be called

	fmulp	ST(1), ST(0)

; 104  :     gluLookAt( pos[0], pos[1], pos[2], tar[0], tar[1], tar[2], 0.0f, 1.0f, 0.0f );

	fstp	QWORD PTR [esp]
	call	_gluLookAt@72

; 105  : 
; 106  :     // draw cube
; 107  :     glEnableClientState( GL_VERTEX_ARRAY );

	mov	esi, DWORD PTR __imp__glEnableClientState@4
	mov	ebx, 32884				; 00008074H
	push	ebx
	call	esi

; 108  : 	glEnableClientState( GL_NORMAL_ARRAY );

	lea	edi, DWORD PTR [ebx+1]
	push	edi
	call	esi

; 109  :     glVertexPointer( 3, GL_FLOAT, 6*sizeof(float), cubeVerts+0);

	push	OFFSET ?cubeVerts@@3PAMA		; cubeVerts
	push	24					; 00000018H
	mov	esi, 5126				; 00001406H
	push	esi
	push	3
	call	DWORD PTR __imp__glVertexPointer@16

; 110  :     glNormalPointer(    GL_FLOAT, 6*sizeof(float), cubeVerts+3);

	push	OFFSET ?cubeVerts@@3PAMA+12
	push	24					; 00000018H
	push	esi
	call	DWORD PTR __imp__glNormalPointer@12

; 111  : 	glDrawElements( GL_QUADS, 6*4, GL_UNSIGNED_INT, cubeIndices );

	push	OFFSET ?cubeIndices@@3QBHB
	push	5125					; 00001405H
	push	24					; 00000018H
	push	7
	call	DWORD PTR __imp__glDrawElements@16

; 112  : 	glDisableClientState( GL_NORMAL_ARRAY );

	mov	esi, DWORD PTR __imp__glDisableClientState@4
	push	edi
	call	esi

; 113  :     glDisableClientState( GL_VERTEX_ARRAY );

	push	ebx
	call	esi
	pop	edi
	pop	esi
	pop	ebx

; 114  : }

	pop	ebp
	ret	4
?intro_do@@YGXJ@Z ENDP					; intro_do
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\shayn\Desktop\i4k_OGL\src\intro.cpp
;	COMDAT ?intro_init@@YGHXZ
_TEXT	SEGMENT
?intro_init@@YGHXZ PROC					; intro_init, COMDAT

; 69   : 	return 1;

	xor	eax, eax
	inc	eax

; 70   : }

	ret	0
?intro_init@@YGHXZ ENDP					; intro_init
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 750  :             return (float)sin(_X);

	fld	DWORD PTR __X$[esp-4]
	fsin

; 751  :         }

	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 649  :             return (float)cos(_X);

	fld	DWORD PTR __X$[esp-4]
	fcos

; 650  :         }

	ret	0
_cosf	ENDP
_TEXT	ENDS
END
